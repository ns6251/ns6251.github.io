<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ns6251のブログ</title><link>https://ns6251.github.io/</link><description>ns6251's personal website</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>Copyright © 2022, ns6251; All rights reserved.</copyright><lastBuildDate>Sun, 15 May 2022 11:29:48 +0000</lastBuildDate><atom:link href="https://ns6251.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>About</title><link>https://ns6251.github.io/about/</link><pubDate>Sun, 15 May 2022 11:45:10 +0000</pubDate><guid>https://ns6251.github.io/about/</guid><description>You can also find me at:
GitHub
Qiita
Twitter</description></item><item><title>PhantomData&lt;T>とtrait境界</title><link>https://ns6251.github.io/posts/phantomdata-trait-bound/</link><pubDate>Sun, 15 May 2022 11:29:48 +0000</pubDate><guid>https://ns6251.github.io/posts/phantomdata-trait-bound/</guid><description>いつもだったらTwitterで「にゃーん」といっておしまいにしてしまう些細な引っ掛かりを，敢えて書き起こしてみる．
TL:DR PhantomData&amp;lt;T&amp;gt;のTのtrait境界のせいで実装した（と思った）Clone, Copyがはがされて悲しかった😢という話．
playgroundのサンプルコード．
導入 例えば，様々なエンティティのIDとなる型をジェネリクスを使って定義したとする． PhantomDataはその名の通り実態のない型である．（Rust By Example参照）
#[derive(Debug, Clone, Copy, PertialEq, Eq, Ord, PertialOrd, Hash)] pub struct Id&amp;lt;T&amp;gt; { id: u32, _marker: PhantomData&amp;lt;T&amp;gt;, } Userというエンティティの場合，以下のようにIdを利用する．
#[derive(Debug)] pub struct User { pub id: Id&amp;lt;Self&amp;gt;, pub name: String, } このイディオム？を利用すると大量のSomeEntityIdみたいなstructの定義をサボることができる．
悲しかったこと これが出来ない．
fn main() { let user = User::new(); let user_id = user.id.clone(); println!(&amp;#34;{:?}, {:?}&amp;#34;, user, user_id); } こんなエラーを吐く．</description></item><item><title>Hello World</title><link>https://ns6251.github.io/posts/hello-world/</link><pubDate>Thu, 21 Apr 2022 06:19:58 +0000</pubDate><guid>https://ns6251.github.io/posts/hello-world/</guid><description>はじめまして。
Static Site Generator (SSG) の1つであるHugoでこのサイトを立ててみました。 テーマには Color Your Worldを使っています。
不定期更新でやっていこうと思います。</description></item></channel></rss>